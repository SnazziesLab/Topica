openapi: 3.0.1
info:
  title: "Topica.Server, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
  version: "1.0"
servers:
- url: /
security:
- Basic: []
  ApiKey: []
paths:
  /api/Login:
    post:
      operationId: Login
      parameters:
      - explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: password
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
      tags:
      - Login
  /api/Topics:
    get:
      operationId: GetTopics
      responses:
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  type: string
                type: array
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
          description: Success
      summary: Gets all Topic Ids.
      tags:
      - Topics
    post:
      operationId: AddMessage
      parameters:
      - description: "If topicId is null, a GUID will be generated in place"
        explode: true
        in: query
        name: topicId
        required: false
        schema:
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: message
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
      summary: Creates a message under topic id.
      tags:
      - Topics
  /api/Topics/Count:
    get:
      operationId: GetCount
      responses:
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                format: int32
                type: integer
            application/json:
              schema:
                format: int32
                type: integer
            text/json:
              schema:
                format: int32
                type: integer
          description: Success
      tags:
      - Topics
  /api/Topics/{topicId}:
    delete:
      operationId: DeleteTopic
      parameters:
      - explode: false
        in: path
        name: topicId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      tags:
      - Topics
    get:
      operationId: GetTopic
      parameters:
      - explode: false
        in: path
        name: topicId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Topic'
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
            text/json:
              schema:
                $ref: '#/components/schemas/Topic'
          description: Success
      tags:
      - Topics
  /api/Topics/{topicId}/messages/{messageId}:
    delete:
      operationId: DeleteMessage
      parameters:
      - explode: false
        in: path
        name: topicId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: messageId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Success
      tags:
      - Topics
components:
  schemas:
    Entry:
      additionalProperties: false
      example:
        createdOn: 2000-01-23T04:56:07.000+00:00
        content: content
        entryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        createdOn:
          format: date-time
          type: string
        content:
          nullable: true
          type: string
        entryId:
          format: uuid
          type: string
      type: object
    ProblemDetails:
      additionalProperties: {}
      properties:
        type:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        status:
          format: int32
          nullable: true
          type: integer
        detail:
          nullable: true
          type: string
        instance:
          nullable: true
          type: string
      type: object
    Topic:
      additionalProperties: false
      example:
        id: id
        history:
        - createdOn: 2000-01-23T04:56:07.000+00:00
          content: content
          entryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - createdOn: 2000-01-23T04:56:07.000+00:00
          content: content
          entryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        createdOn: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          nullable: true
          type: string
        createdOn:
          format: date-time
          type: string
        history:
          items:
            $ref: '#/components/schemas/Entry'
          nullable: true
          type: array
      type: object
  securitySchemes:
    Basic:
      description: Basic Authorization header using the Bearer scheme.
      scheme: basic
      type: http
    ApiKey:
      in: header
      name: X-API-KEY
      type: apiKey
