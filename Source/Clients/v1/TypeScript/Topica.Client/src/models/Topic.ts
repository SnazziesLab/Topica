/* tslint:disable */
/* eslint-disable */
/**
 * Topica.Server, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Entry } from './Entry';
import {
    EntryFromJSON,
    EntryFromJSONTyped,
    EntryToJSON,
} from './Entry';

/**
 * 
 * @export
 * @interface Topic
 */
export interface Topic {
    /**
     * 
     * @type {string}
     * @memberof Topic
     */
    id?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof Topic
     */
    createdOn?: Date;
    /**
     * 
     * @type {Array<Entry>}
     * @memberof Topic
     */
    history?: Array<Entry> | null;
}

/**
 * Check if a given object implements the Topic interface.
 */
export function instanceOfTopic(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TopicFromJSON(json: any): Topic {
    return TopicFromJSONTyped(json, false);
}

export function TopicFromJSONTyped(json: any, ignoreDiscriminator: boolean): Topic {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'createdOn': !exists(json, 'createdOn') ? undefined : (new Date(json['createdOn'])),
        'history': !exists(json, 'history') ? undefined : (json['history'] === null ? null : (json['history'] as Array<any>).map(EntryFromJSON)),
    };
}

export function TopicToJSON(value?: Topic | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdOn': value.createdOn === undefined ? undefined : (value.createdOn.toISOString()),
        'history': value.history === undefined ? undefined : (value.history === null ? null : (value.history as Array<any>).map(EntryToJSON)),
    };
}

