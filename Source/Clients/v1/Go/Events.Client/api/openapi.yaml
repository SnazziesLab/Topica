openapi: 3.0.1
info:
  title: "Events, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
  version: "1.0"
servers:
- url: /
security:
- Bearer: []
paths:
  /Events:
    delete:
      operationId: DeleteEvent
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Event'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Event'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Event'
              type: array
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Event'
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
            text/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: Success
      tags:
      - Events
    get:
      operationId: GetEvents
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Event'
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
            text/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: Success
      tags:
      - Events
    put:
      operationId: UpdateEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          text/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Event'
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
            text/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: Success
      tags:
      - Events
  /Sink:
    put:
      parameters:
      - explode: true
        in: query
        name: Uid
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: content
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
      tags:
      - Sink
components:
  schemas:
    Event:
      additionalProperties: false
      example:
        uid: uid
        description: description
        history:
          key:
            dateTimeOffset: 2000-01-23T04:56:07.000+00:00
            eventUid: eventUid
            content: content
        createdOn: 2000-01-23T04:56:07.000+00:00
      properties:
        uid:
          nullable: true
          type: string
        createdOn:
          format: date-time
          type: string
        description:
          nullable: true
          type: string
        history:
          additionalProperties:
            $ref: '#/components/schemas/Message'
          nullable: true
          type: object
      type: object
    Message:
      additionalProperties: false
      example:
        dateTimeOffset: 2000-01-23T04:56:07.000+00:00
        eventUid: eventUid
        content: content
      properties:
        dateTimeOffset:
          format: date-time
          type: string
        content:
          minLength: 1
          type: string
        eventUid:
          nullable: true
          type: string
      required:
      - content
      - dateTimeOffset
      type: object
  securitySchemes:
    Bearer:
      bearerFormat: JWT
      description: Please enter a valid token
      scheme: Bearer
      type: http
